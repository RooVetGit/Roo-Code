{
	"common": {
		"save": "Save",
		"done": "Done",
		"cancel": "Cancel",
		"reset": "Reset",
		"select": "Select",
		"add": "Add Header",
		"remove": "Remove"
	},
	"header": {
		"title": "Settings",
		"saveButtonTooltip": "Save changes",
		"nothingChangedTooltip": "No changes to save",
		"doneButtonTooltip": "Close settings",
		"searchPlaceholder": "Search settings...",
		"searchTooltip": "Search settings",
		"clearSearchTooltip": "Clear search",
		"noSearchResults": "No settings match your search"
	},
	"unsavedChangesDialog": {
		"title": "Unsaved Changes",
		"description": "You have unsaved changes. Do you want to discard them?",
		"cancelButton": "Cancel",
		"discardButton": "Discard Changes"
	},
	"sections": {
		"providers": "Providers",
		"autoApprove": "Auto-Approve",
		"browser": "Browser",
		"checkpoints": "Checkpoints",
		"notifications": "Notifications",
		"contextManagement": "Context Management",
		"terminal": "Terminal",
		"prompts": "Prompts",
		"experimental": "Experimental",
		"language": "Language",
		"about": "About",
		"advanced": "Advanced"
	},
	"language": {
		"description": "Select your preferred language for the interface"
	},
	"prompts": {
		"description": "Customize prompts and instructions for Roo",
		"customSupportPrompts": {
			"label": "Custom Support Prompts",
			"description": "Add custom instructions or prompts to guide Roo's behavior"
		}
	},
	"codeIndex": {
		"title": "Codebase Indexing",
		"description": "Configure codebase indexing settings to enable semantic search of your project. <0>Learn more</0>",
		"statusTitle": "Status",
		"enableLabel": "Enable Codebase Indexing",
		"enableDescription": "Enable code indexing for improved search and context understanding",
		"settingsTitle": "Indexing Settings",
		"disabledMessage": "Codebase indexing is currently disabled. Enable it in the global settings to configure indexing options.",
		"providerLabel": "Embeddings Provider",
		"embedderProviderLabel": "Embedder Provider",
		"selectProviderPlaceholder": "Select provider",
		"openaiProvider": "OpenAI",
		"ollamaProvider": "Ollama",
		"geminiProvider": "Gemini",
		"geminiApiKeyLabel": "API Key:",
		"geminiApiKeyPlaceholder": "Enter your Gemini API key",
		"mistralProvider": "Mistral",
		"mistralApiKeyLabel": "API Key:",
		"mistralApiKeyPlaceholder": "Enter your Mistral API key",
		"openaiCompatibleProvider": "OpenAI Compatible",
		"openAiKeyLabel": "OpenAI API Key",
		"openAiKeyPlaceholder": "Enter your OpenAI API key",
		"openAiCompatibleBaseUrlLabel": "Base URL",
		"openAiCompatibleApiKeyLabel": "API Key",
		"openAiCompatibleApiKeyPlaceholder": "Enter your API key",
		"openAiCompatibleModelDimensionLabel": "Embedding Dimension:",
		"modelDimensionLabel": "Model Dimension",
		"openAiCompatibleModelDimensionPlaceholder": "e.g., 1536",
		"openAiCompatibleModelDimensionDescription": "The embedding dimension (output size) for your model. Check your provider's documentation for this value. Common values: 384, 768, 1536, 3072.",
		"modelLabel": "Model",
		"modelPlaceholder": "Enter model name",
		"selectModel": "Select a model",
		"selectModelPlaceholder": "Select model",
		"ollamaUrlLabel": "Ollama URL:",
		"ollamaBaseUrlLabel": "Ollama Base URL",
		"qdrantUrlLabel": "Qdrant URL",
		"qdrantKeyLabel": "Qdrant Key:",
		"qdrantApiKeyLabel": "Qdrant API Key",
		"qdrantApiKeyPlaceholder": "Enter your Qdrant API key (optional)",
		"setupConfigLabel": "Setup",
		"advancedConfigLabel": "Advanced Configuration",
		"searchMinScoreLabel": "Search Score Threshold",
		"searchMinScoreDescription": "Minimum similarity score (0.0-1.0) required for search results. Lower values return more results but may be less relevant. Higher values return fewer but more relevant results.",
		"searchMinScoreResetTooltip": "Reset to default value (0.4)",
		"searchMaxResultsLabel": "Maximum Search Results",
		"searchMaxResultsDescription": "Maximum number of search results to return when querying the codebase index. Higher values provide more context but may include less relevant results.",
		"resetToDefault": "Reset to default",
		"startIndexingButton": "Start Indexing",
		"clearIndexDataButton": "Clear Index Data",
		"unsavedSettingsMessage": "Please save your settings before starting the indexing process.",
		"clearDataDialog": {
			"title": "Are you sure?",
			"description": "This action cannot be undone. This will permanently delete your codebase index data.",
			"cancelButton": "Cancel",
			"confirmButton": "Clear Data"
		},
		"ollamaUrlPlaceholder": "http://localhost:11434",
		"openAiCompatibleBaseUrlPlaceholder": "https://api.example.com",
		"modelDimensionPlaceholder": "1536",
		"qdrantUrlPlaceholder": "http://localhost:6333",
		"saveError": "Failed to save settings",
		"modelDimensions": "({{dimension}} dimensions)",
		"saveSuccess": "Settings saved successfully",
		"saving": "Saving...",
		"saveSettings": "Save",
		"indexingStatuses": {
			"standby": "Standby",
			"indexing": "Indexing",
			"indexed": "Indexed",
			"error": "Error"
		},
		"close": "Close",
		"validation": {
			"qdrantUrlRequired": "Qdrant URL is required",
			"invalidQdrantUrl": "Invalid Qdrant URL",
			"invalidOllamaUrl": "Invalid Ollama URL",
			"invalidBaseUrl": "Invalid base URL",
			"openaiApiKeyRequired": "OpenAI API key is required",
			"modelSelectionRequired": "Model selection is required",
			"apiKeyRequired": "API key is required",
			"modelIdRequired": "Model ID is required",
			"modelDimensionRequired": "Model dimension is required",
			"geminiApiKeyRequired": "Gemini API key is required",
			"mistralApiKeyRequired": "Mistral API key is required",
			"ollamaBaseUrlRequired": "Ollama base URL is required",
			"baseUrlRequired": "Base URL is required",
			"modelDimensionMinValue": "Model dimension must be greater than 0"
		}
	},
	"autoApprove": {
		"description": "Configure which actions Roo can perform automatically without asking for permission",
		"readOnly": {
			"label": "Read-Only Operations",
			"description": "When enabled, Roo will automatically view directory contents and read files without requiring you to click the Approve button.",
			"outsideWorkspace": {
				"label": "Allow reading files outside workspace",
				"description": "Allow Roo to read files outside the current workspace directory"
			}
		},
		"write": {
			"label": "Write Operations",
			"description": "Automatically create and edit files without requiring approval",
			"delayLabel": "Delay after writes to allow diagnostics to detect potential problems",
			"delayDescription": "Wait time in milliseconds after file writes before diagnostics are updated",
			"outsideWorkspace": {
				"label": "Allow writing files outside workspace",
				"description": "Allow Roo to create or modify files outside the current workspace directory"
			},
			"protected": {
				"label": "Allow modifying protected files",
				"description": "Allow Roo to modify files that are normally protected (e.g., .env, .git)"
			}
		},
		"browser": {
			"label": "Browser",
			"description": "Automatically perform browser actions without requiring approval. Note: Only applies when the model supports computer use"
		},
		"retry": {
			"label": "Retry Failed Operations",
			"description": "Automatically retry failed API requests when server returns an error response",
			"delayLabel": "Retry delay (seconds)",
			"delayDescription": "Time to wait in seconds before retrying a failed request"
		},
		"mcp": {
			"label": "MCP",
			"description": "Enable auto-approval of individual MCP tools in the MCP Servers view (requires both this setting and the tool's individual \"Always allow\" checkbox)"
		},
		"modeSwitch": {
			"label": "Mode",
			"description": "Automatically switch between different modes without requiring approval"
		},
		"subtasks": {
			"label": "Subtasks",
			"description": "Allow creation and completion of subtasks without requiring approval"
		},
		"followupQuestions": {
			"label": "Follow-up Questions",
			"description": "Automatically select the first suggested answer for follow-up questions after the configured timeout",
			"timeoutLabel": "Question timeout (seconds)",
			"timeoutDescription": "Time to wait before auto-selecting the first answer"
		},
		"execute": {
			"label": "Execute Commands",
			"description": "Automatically execute allowed terminal commands without requiring approval",
			"allowedCommands": {
				"label": "Allowed Commands",
				"description": "Commands that Roo can execute automatically (one per line, supports wildcards)"
			},
			"deniedCommands": {
				"label": "Denied Commands",
				"description": "Commands that Roo is explicitly forbidden from executing (one per line, supports wildcards)"
			},
			"commandPlaceholder": "Enter a command pattern (e.g., npm *, git status)",
			"deniedCommandPlaceholder": "Enter a denied command pattern (e.g., rm -rf *, sudo *)",
			"addButton": "Add Command",
			"autoDenied": "Commands with the prefix `{{prefix}}` have been forbidden by the user. Do not bypass this restriction by running another command."
		},
		"updateTodoList": {
			"label": "Todo",
			"description": "Automatically update the to-do list without requiring approval"
		},
		"apiRequestLimit": {
			"label": "Max Requests",
			"title": "Max Requests",
			"description": "Automatically make this many API requests before asking for approval to continue with the task.",
			"unlimited": "Unlimited"
		},
		"toggleAriaLabel": "Toggle auto-approve",
		"disabledAriaLabel": "Auto-approve is disabled",
		"selectOptionsFirst": "Please select options first"
	},
	"providers": {
		"providerDocumentation": "{{provider}} documentation",
		"configProfile": "Configuration Profile",
		"description": "Save different API configurations to quickly switch between providers and settings.",
		"apiProvider": "API Provider",
		"apiProviderDescription": "Select the API provider for AI model access",
		"model": "Model",
		"modelDescription": "Choose the AI model to use for this configuration",
		"nameEmpty": "Name cannot be empty",
		"nameExists": "A profile with this name already exists",
		"deleteProfile": "Delete Profile",
		"invalidArnFormat": "Invalid ARN format. Please check the examples above.",
		"enterNewName": "Enter new name",
		"addProfile": "Add Profile",
		"renameProfile": "Rename Profile",
		"newProfile": "New Configuration Profile",
		"enterProfileName": "Enter profile name",
		"createProfile": "Create Profile",
		"cannotDeleteOnlyProfile": "Cannot delete the only profile",
		"searchPlaceholder": "Search profiles",
		"searchProviderPlaceholder": "Search providers",
		"noProviderMatchFound": "No providers found",
		"noMatchFound": "No matching profiles found",
		"vscodeLmDescription": " The VS Code Language Model API allows you to run models provided by other VS Code extensions (including but not limited to GitHub Copilot). The easiest way to get started is to install the Copilot and Copilot Chat extensions from the VS Code Marketplace.",
		"awsCustomArnUse": "Enter a valid Amazon Bedrock ARN for the model you want to use. Format examples:",
		"awsCustomArnDesc": "Make sure the region in the ARN matches your selected AWS Region above.",
		"openRouterApiKey": "OpenRouter API Key",
		"getOpenRouterApiKey": "Get OpenRouter API Key",
		"apiKeyStorageNotice": "API keys are stored securely in VS Code's secret storage",
		"glamaApiKey": "Glama API Key",
		"getGlamaApiKey": "Get Glama API Key",
		"useCustomBaseUrl": "Use custom base URL",
		"useReasoning": "Enable reasoning",
		"useHostHeader": "Use custom Host header",
		"useLegacyFormat": "Use legacy OpenAI API format",
		"customHeaders": "Custom Headers",
		"headerName": "Header name",
		"headerValue": "Header value",
		"noCustomHeaders": "No custom headers defined. Click the + button to add one.",
		"requestyApiKey": "Requesty API Key",
		"refreshModels": {
			"label": "Refresh Models",
			"hint": "Please reopen the settings to see the latest models.",
			"loading": "Loading models...",
			"success": "Models refreshed successfully",
			"error": "Failed to refresh models",
			"missingConfig": "Please configure API settings first"
		},
		"getRequestyApiKey": "Get Requesty API Key",
		"openRouterTransformsText": "Compress prompts and message chains to the context size (<a>OpenRouter Transforms</a>)",
		"anthropicApiKey": "Anthropic API Key",
		"getAnthropicApiKey": "Get Anthropic API Key",
		"anthropicUseAuthToken": "Pass Anthropic API Key as Authorization header instead of X-Api-Key",
		"chutesApiKey": "Chutes API Key",
		"getChutesApiKey": "Get Chutes API Key",
		"deepSeekApiKey": "DeepSeek API Key",
		"getDeepSeekApiKey": "Get DeepSeek API Key",
		"moonshotApiKey": "Moonshot API Key",
		"getMoonshotApiKey": "Get Moonshot API Key",
		"moonshotBaseUrl": "Moonshot Entrypoint",
		"geminiApiKey": "Gemini API Key",
		"getGroqApiKey": "Get Groq API Key",
		"groqApiKey": "Groq API Key",
		"getHuggingFaceApiKey": "Get Hugging Face API Key",
		"huggingFaceApiKey": "Hugging Face API Key",
		"huggingFaceModelId": "Model ID",
		"huggingFaceLoading": "Loading...",
		"huggingFaceModelsCount": "({{count}} models)",
		"huggingFaceSelectModel": "Select a model...",
		"huggingFaceSearchModels": "Search models...",
		"huggingFaceNoModelsFound": "No models found",
		"huggingFaceProvider": "Provider",
		"huggingFaceProviderAuto": "Auto",
		"huggingFaceSelectProvider": "Select a provider...",
		"huggingFaceSearchProviders": "Search providers...",
		"huggingFaceNoProvidersFound": "No providers found",
		"getGeminiApiKey": "Get Gemini API Key",
		"openAiApiKey": "OpenAI API Key",
		"apiKey": "API Key",
		"openAiBaseUrl": "Base URL",
		"getOpenAiApiKey": "Get OpenAI API Key",
		"mistralApiKey": "Mistral API Key",
		"getMistralApiKey": "Get Mistral / Codestral API Key",
		"codestralBaseUrl": "Codestral Base URL (Optional)",
		"codestralBaseUrlDesc": "Set an alternative URL for the Codestral model.",
		"xaiApiKey": "xAI API Key",
		"getXaiApiKey": "Get xAI API Key",
		"litellmApiKey": "LiteLLM API Key",
		"litellmBaseUrl": "LiteLLM Base URL",
		"awsCredentials": "AWS Credentials",
		"awsProfile": "AWS Profile",
		"awsApiKey": "Amazon Bedrock API Key",
		"awsProfileName": "AWS Profile Name",
		"awsAccessKey": "AWS Access Key",
		"awsSecretKey": "AWS Secret Key",
		"awsSessionToken": "AWS Session Token",
		"awsRegion": "AWS Region",
		"awsCrossRegion": "Use cross-region inference",
		"awsBedrockVpc": {
			"useCustomVpcEndpoint": "Use custom VPC endpoint",
			"vpcEndpointUrlPlaceholder": "Enter VPC Endpoint URL (optional)",
			"examples": "Examples:"
		},
		"enablePromptCaching": "Enable prompt caching",
		"enablePromptCachingTitle": "Enable prompt caching to improve performance and reduce costs for supported models.",
		"cacheUsageNote": "Note: If you don't see cache usage, try selecting a different model and then selecting your desired model again.",
		"vscodeLmModel": "Language Model",
		"vscodeLmWarning": "Note: This is a very experimental integration and provider support will vary. If you get an error about a model not being supported, that's an issue on the provider's end.",
		"googleCloudSetup": {
			"title": "To use Google Cloud Vertex AI, you need to:",
			"step1": "1. Create a Google Cloud account, enable the Vertex AI API & enable the desired Claude models.",
			"step2": "2. Install the Google Cloud CLI & configure application default credentials.",
			"step3": "3. Or create a service account with credentials."
		},
		"googleCloudCredentials": "Google Cloud Credentials",
		"googleCloudKeyFile": "Google Cloud Key File Path",
		"googleCloudProjectId": "Google Cloud Project ID",
		"googleCloudRegion": "Google Cloud Region",
		"lmStudio": {
			"baseUrl": "Base URL (optional)",
			"modelId": "Model ID",
			"speculativeDecoding": "Enable Speculative Decoding",
			"draftModelId": "Draft Model ID",
			"draftModelDesc": "Draft model must be from the same model family for speculative decoding to work correctly.",
			"selectDraftModel": "Select Draft Model",
			"noModelsFound": "No draft models found. Please ensure LM Studio is running with Server Mode enabled.",
			"description": "LM Studio allows you to run models locally on your computer. For instructions on how to get started, see their <a>quickstart guide</a>. You will also need to start LM Studio's <b>local server</b> feature to use it with this extension. <span>Note:</span> Roo Code uses complex prompts and works best with Claude models. Less capable models may not work as expected."
		},
		"ollama": {
			"baseUrl": "Base URL (optional)",
			"modelId": "Model ID",
			"description": "Ollama allows you to run models locally on your computer. For instructions on how to get started, see their quickstart guide.",
			"warning": "Note: Roo Code uses complex prompts and works best with Claude models. Less capable models may not work as expected."
		},
		"unboundApiKey": "Unbound API Key",
		"getUnboundApiKey": "Get Unbound API Key",
		"unboundRefreshModelsSuccess": "Models list updated! You can now select from the latest models.",
		"unboundInvalidApiKey": "Invalid API key. Please check your API key and try again.",
		"humanRelay": {
			"description": "No API key is required, but the user needs to help copy and paste the information to the web chat AI.",
			"instructions": "During use, a dialog box will pop up and the current message will be copied to the clipboard automatically. You need to paste these to web versions of AI (such as ChatGPT or Claude), then copy the AI's reply back to the dialog box and click the confirm button."
		},
		"openRouter": {
			"providerRouting": {
				"title": "OpenRouter Provider Routing",
				"description": "OpenRouter routes requests to the best available providers for your model. By default, requests are load balanced across the top providers to maximize uptime. However, you can choose a specific provider to use for this model.",
				"learnMore": "Learn more about provider routing"
			}
		},
		"customModel": {
			"capabilities": "Configure the capabilities and pricing for your custom OpenAI-compatible model. Be careful when specifying the model capabilities, as they can affect how Roo Code performs.",
			"maxTokens": {
				"label": "Max Output Tokens",
				"description": "Maximum number of tokens the model can generate in a response. (Specify -1 to allow the server to set the max tokens.)"
			},
			"contextWindow": {
				"label": "Context Window Size",
				"description": "Total tokens (input + output) the model can process."
			},
			"imageSupport": {
				"label": "Image Support",
				"description": "Is this model capable of processing and understanding images?"
			},
			"computerUse": {
				"label": "Computer Use",
				"description": "Is this model capable of interacting with a browser? (e.g. Claude 3.7 Sonnet)."
			},
			"promptCache": {
				"label": "Prompt Caching",
				"description": "Is this model capable of caching prompts?"
			},
			"pricing": {
				"input": {
					"label": "Input Price",
					"description": "Cost per million tokens in the input/prompt. This affects the cost of sending context and instructions to the model."
				},
				"output": {
					"label": "Output Price",
					"description": "Cost per million tokens in the model's response. This affects the cost of generated content and completions."
				},
				"cacheReads": {
					"label": "Cache Reads Price",
					"description": "Cost per million tokens for reading from the cache. This is the price charged when a cached response is retrieved."
				},
				"cacheWrites": {
					"label": "Cache Writes Price",
					"description": "Cost per million tokens for writing to the cache. This is the price charged when a prompt is cached for the first time."
				}
			},
			"resetDefaults": "Reset to Defaults"
		},
		"rateLimitSeconds": {
			"label": "Rate limit",
			"description": "Minimum time between API requests."
		},
		"consecutiveMistakeLimit": {
			"label": "Error & Repetition Limit",
			"description": "Number of consecutive errors or repeated actions before showing 'Roo is having trouble' dialog",
			"unlimitedDescription": "Unlimited retries enabled (auto-proceed). The dialog will never appear.",
			"warning": "⚠️ Setting to 0 allows unlimited retries which may consume significant API usage"
		},
		"reasoningEffort": {
			"label": "Model Reasoning Effort",
			"high": "High",
			"medium": "Medium",
			"low": "Low"
		},
		"setReasoningLevel": "Enable Reasoning Effort",
		"claudeCode": {
			"pathLabel": "Claude Code Path",
			"description": "Optional path to your Claude Code CLI. Defaults to 'claude' if not set.",
			"placeholder": "Default: claude",
			"maxTokensLabel": "Max Output Tokens",
			"maxTokensDescription": "Maximum number of output tokens for Claude Code responses. Default is 8000."
		}
	},
	"browser": {
		"enable": {
			"label": "Enable Browser Tool",
			"description": "Allow Roo to use browser automation for testing and web scraping"
		},
		"viewport": {
			"label": "Default Viewport Size",
			"description": "The default browser window size when launching",
			"options": {
				"largeDesktop": "Large Desktop (1920x1080)",
				"smallDesktop": "Small Desktop (1366x768)",
				"tablet": "Tablet (768x1024)",
				"mobile": "Mobile (375x667)"
			}
		},
		"screenshotQuality": {
			"label": "Screenshot Quality",
			"description": "Quality of screenshots (0-100, higher is better but larger file size)"
		},
		"remote": {
			"label": "Remote Browser URL",
			"description": "Connect to a remote browser instance instead of launching locally",
			"urlPlaceholder": {
				"label": "Remote Browser Host",
				"description": "WebSocket URL for the remote browser connection"
			},
			"testButton": "Test Connection",
			"testingButton": "Testing connection...",
			"instructions": "Start Chrome with: chrome --remote-debugging-port=9222"
		}
	},
	"checkpoints": {
		"enable": {
			"label": "Enable Checkpoints",
			"description": "Save conversation checkpoints to restore from later"
		}
	},
	"notifications": {
		"sound": {
			"label": "Sound Notifications",
			"description": "Play sounds for various events",
			"volumeLabel": "Volume",
			"volumeDescription": "Adjust the volume level for sound notifications (0-100)"
		},
		"tts": {
			"label": "Text-to-Speech",
			"description": "Read Roo's responses aloud",
			"speedLabel": "Speech Speed",
			"speedDescription": "Adjust the speech rate for text-to-speech (0.1-10.0)"
		}
	},
	"contextManagement": {
		"description": "Configure how Roo manages and includes context in conversations",
		"autoCondenseContextPercent": {
			"label": "Threshold to trigger intelligent context condensing",
			"description": "When the context window reaches this threshold, Roo will automatically condense it."
		},
		"condensingApiConfiguration": {
			"label": "API Configuration for Context Condensing",
			"description": "Select which API configuration to use for context condensing operations. Leave unselected to use the current active configuration.",
			"useCurrentConfig": "Default"
		},
		"customCondensingPrompt": {
			"label": "Custom Context Condensing Prompt",
			"description": "Customize the system prompt used for context condensing. Leave empty to use the default prompt.",
			"placeholder": "Enter your custom condensing prompt here...\n\nYou can use the same structure as the default prompt:\n- Previous Conversation\n- Current Work\n- Key Technical Concepts\n- Relevant Files and Code\n- Problem Solving\n- Pending Tasks and Next Steps",
			"reset": "Reset to Default",
			"hint": "Empty = use default prompt"
		},
		"autoCondenseContext": {
			"name": "Auto-Condense Context",
			"description": "When enabled, Roo will automatically condense the context when the threshold is reached. When disabled, you can still manually trigger context condensing."
		},
		"openTabs": {
			"label": "Include Open Tabs",
			"description": "Automatically include content from open editor tabs as context"
		},
		"workspaceFiles": {
			"label": "Include Workspace Files",
			"description": "Allow Roo to automatically include relevant workspace files as context"
		},
		"rooignore": {
			"label": "Use .rooignore",
			"description": "Respect .rooignore file patterns when including context"
		},
		"maxConcurrentFileReads": {
			"label": "Max Concurrent File Reads",
			"description": "Maximum number of files to read simultaneously"
		},
		"maxReadFile": {
			"label": "Max File Read Size",
			"description": "Maximum number of lines to read from a single file",
			"lines": "lines",
			"always_full_read": "Always read full file"
		},
		"diagnostics": {
			"includeMessages": {
				"label": "Include Diagnostics",
				"description": "Include code diagnostics (errors, warnings) as context"
			},
			"maxMessages": {
				"label": "Max Diagnostic Messages",
				"description": "Maximum number of diagnostic messages to include",
				"resetTooltip": "Reset to default",
				"unlimitedLabel": "Unlimited"
			},
			"delayAfterWrite": {
				"label": "Diagnostics Delay",
				"description": "Wait time (ms) after file changes before updating diagnostics"
			}
		},
		"condensingThreshold": {
			"label": "Context Condensing Threshold",
			"description": "Configure when context condensing should be triggered based on token usage",
			"selectProfile": "Select a profile",
			"defaultProfile": "Default",
			"defaultDescription": "Standard context management",
			"profileDescription": "Custom threshold: {{threshold}}%",
			"inheritDescription": "This profile inherits the global default threshold ({{threshold}}%)",
			"usesGlobal": "(uses global {{threshold}}%)"
		}
	},
	"terminal": {
		"basic": {
			"label": "Basic Settings",
			"description": "Basic terminal settings"
		},
		"advanced": {
			"label": "Advanced Settings",
			"description": "Advanced terminal configuration options"
		},
		"outputLineLimit": {
			"label": "Output Line Limit",
			"description": "Maximum lines to capture from terminal output"
		},
		"outputCharacterLimit": {
			"label": "Output Character Limit",
			"description": "Maximum characters to capture from terminal output"
		},
		"shellIntegrationTimeout": {
			"label": "Shell Integration Timeout",
			"description": "Timeout (ms) for shell integration initialization"
		},
		"shellIntegrationDisabled": {
			"label": "Disable Shell Integration",
			"description": "Disable VS Code shell integration for compatibility"
		},
		"commandDelay": {
			"label": "Command Delay",
			"description": "Delay (ms) between sending commands"
		},
		"compressProgressBar": {
			"label": "Compress Progress Bars",
			"description": "Compress repetitive progress bar output"
		},
		"powershellCounter": {
			"label": "PowerShell Counter",
			"description": "Use counter-based command tracking for PowerShell"
		},
		"zshClearEolMark": {
			"label": "Clear ZSH EOL Mark",
			"description": "Clear end-of-line marks in ZSH"
		},
		"zshOhMy": {
			"label": "Oh My ZSH Support",
			"description": "Enable Oh My ZSH compatibility"
		},
		"zshP10k": {
			"label": "Powerlevel10k Support",
			"description": "Enable Powerlevel10k theme compatibility"
		},
		"zdotdir": {
			"label": "ZDOTDIR",
			"description": "Custom ZSH configuration directory"
		},
		"inheritEnv": {
			"label": "Inherit Environment",
			"description": "Inherit environment variables from VS Code"
		}
	},
	"advancedSettings": {
		"title": "Advanced settings"
	},
	"advanced": {
		"diff": {
			"label": "Enable editing through diffs",
			"description": "When enabled, Roo will be able to edit files more quickly and will automatically reject truncated full-file writes. Works best with the latest Claude 3.7 Sonnet model.",
			"strategy": {
				"label": "Diff strategy",
				"options": {
					"standard": "Standard (Single block)",
					"multiBlock": "Experimental: Multi-block diff",
					"unified": "Experimental: Unified diff"
				},
				"descriptions": {
					"standard": "Standard diff strategy applies changes to a single code block at a time.",
					"unified": "Unified diff strategy takes multiple approaches to applying diffs and chooses the best approach.",
					"multiBlock": "Multi-block diff strategy allows updating multiple code blocks in a file in one request."
				}
			},
			"matchPrecision": {
				"label": "Match precision",
				"description": "This slider controls how precisely code sections must match when applying diffs. Lower values allow more flexible matching but increase the risk of incorrect replacements. Use values below 100% with extreme caution."
			}
		},
		"todoList": {
			"label": "Enable todo list tool",
			"description": "When enabled, Roo can create and manage todo lists to track task progress. This helps organize complex tasks into manageable steps."
		},
		"mcpEnabled": {
			"label": "Enable MCP",
			"description": "Enable Model Context Protocol (MCP) for enhanced model capabilities"
		}
	},
	"experimental": {
		"DIFF_STRATEGY_UNIFIED": {
			"name": "Diff Strategy Unified",
			"description": "Enable diff strategy unified functionality"
		},
		"SEARCH_AND_REPLACE": {
			"name": "Search And Replace",
			"description": "Enable search and replace functionality"
		},
		"INSERT_BLOCK": {
			"name": "Insert Block",
			"description": "Enable insert block functionality"
		},
		"POWER_STEERING": {
			"name": "Power Steering",
			"description": "Enable power steering functionality"
		},
		"CONCURRENT_FILE_READS": {
			"name": "Concurrent File Reads",
			"description": "Enable concurrent file reads functionality"
		},
		"MULTI_SEARCH_AND_REPLACE": {
			"name": "Multi Search And Replace",
			"description": "Enable multi search and replace functionality"
		},
		"MARKETPLACE": {
			"name": "Marketplace",
			"description": "Enable marketplace functionality"
		},
		"MULTI_FILE_APPLY_DIFF": {
			"name": "Multi File Apply Diff",
			"description": "Enable multi file apply diff functionality"
		}
	},
	"promptCaching": {
		"label": "Disable prompt caching",
		"description": "When checked, Roo will not use prompt caching for this model."
	},
	"temperature": {
		"useCustom": "Use custom temperature",
		"description": "Controls randomness in the model's responses.",
		"rangeDescription": "Higher values make output more random, lower values make it more deterministic."
	},
	"modelInfo": {
		"supportsImages": "Supports images",
		"noImages": "Does not support images",
		"supportsComputerUse": "Supports computer use",
		"noComputerUse": "Does not support computer use",
		"supportsPromptCache": "Supports prompt caching",
		"noPromptCache": "Does not support prompt caching",
		"maxOutput": "Max output",
		"inputPrice": "Input price",
		"outputPrice": "Output price",
		"cacheReadsPrice": "Cache reads price",
		"cacheWritesPrice": "Cache writes price",
		"enableStreaming": "Enable streaming",
		"enableR1Format": "Enable R1 model parameters",
		"enableR1FormatTips": "Must be enabled when using R1 models such as QWQ to prevent 400 errors",
		"useAzure": "Use Azure",
		"azureApiVersion": "Set Azure API version",
		"gemini": {
			"freeRequests": "* Free up to {{count}} requests per minute. After that, billing depends on prompt size.",
			"pricingDetails": "For more info, see pricing details.",
			"billingEstimate": "* Billing is an estimate - exact cost depends on prompt size."
		}
	},
	"modelPicker": {
		"automaticFetch": "The extension automatically fetches the latest list of models available on <serviceLink>{{serviceName}}</serviceLink>. If you're unsure which model to choose, Roo Code works best with <defaultModelLink>{{defaultModelId}}</defaultModelLink>. You can also try searching \"free\" for no-cost options currently available.",
		"label": "Model",
		"searchPlaceholder": "Search",
		"noMatchFound": "No match found",
		"useCustomModel": "Use custom: {{modelId}}"
	},
	"footer": {
		"feedback": "Send Feedback",
		"telemetry": {
			"label": "Telemetry",
			"description": "Help improve Roo Code by sending anonymous usage data"
		},
		"settings": {
			"import": "Import Settings",
			"export": "Export Settings",
			"reset": "Reset Settings"
		}
	},
	"thinkingBudget": {
		"maxTokens": "Max Tokens",
		"maxThinkingTokens": "Max Thinking Tokens"
	},
	"validation": {
		"apiKey": "You must provide a valid API key.",
		"awsRegion": "You must choose a region to use with Amazon Bedrock.",
		"googleCloud": "You must provide a valid Google Cloud Project ID and Region.",
		"modelId": "You must provide a valid model ID.",
		"modelSelector": "You must provide a valid model selector.",
		"openAi": "You must provide a valid base URL, API key, and model ID.",
		"arn": {
			"invalidFormat": "Invalid ARN format. Please check the format requirements.",
			"regionMismatch": "Warning: The region in your ARN ({{arnRegion}}) does not match your selected region ({{region}}). This may cause access issues. The provider will use the region from the ARN."
		},
		"modelAvailability": "The model ID ({{modelId}}) you provided is not available. Please choose a different model.",
		"providerNotAllowed": "Provider '{{provider}}' is not allowed by your organization",
		"modelNotAllowed": "Model '{{model}}' is not allowed for provider '{{provider}}' by your organization",
		"profileInvalid": "This profile contains a provider or model that is not allowed by your organization"
	},
	"placeholders": {
		"apiKey": "Enter API key",
		"profileName": "Enter profile name",
		"accessKey": "Enter Access Key...",
		"secretKey": "Enter Secret Key...",
		"sessionToken": "Enter Session Token...",
		"credentialsJson": "Enter Credentials JSON...",
		"keyFilePath": "Enter Key File Path...",
		"projectId": "Enter Project ID...",
		"customArn": "Enter ARN (e.g. arn:aws:bedrock:us-east-1:123456789012:foundation-model/my-model)",
		"baseUrl": "Enter base URL",
		"modelId": {
			"lmStudio": "e.g. meta-llama-3.1-8b-instruct",
			"lmStudioDraft": "e.g. lmstudio-community/llama-3.2-1b-instruct",
			"ollama": "e.g. llama3.1"
		},
		"numbers": {
			"maxTokens": "e.g. 4096",
			"contextWindow": "e.g. 128000",
			"inputPrice": "e.g. 0.0001",
			"outputPrice": "e.g. 0.0002",
			"cacheWritePrice": "e.g. 0.00005"
		}
	},
	"defaults": {
		"ollamaUrl": "Default: http://localhost:11434",
		"lmStudioUrl": "Default: http://localhost:1234",
		"geminiUrl": "Default: https://generativelanguage.googleapis.com"
	},
	"labels": {
		"customArn": "Custom ARN",
		"useCustomArn": "Use custom ARN..."
	},
	"includeMaxOutputTokens": "Include max output tokens",
	"includeMaxOutputTokensDescription": "Send max output tokens parameter in API requests. Some providers may not support this."
}
